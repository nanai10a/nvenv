name: Test

on:
  push:

jobs:
  test-node:
    name: Test on Node.js ${{ matrix.node-version }} / ${{ matrix.os }} / ${{ matrix.package-manager }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x, 22.x, 24.x, 25.x]
        package-manager: [npm, pnpm, yarn]
        exclude:
          # Exclude yarn berry on Windows due to instability
          - os: windows-latest
            package-manager: yarn

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        if: matrix.package-manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Yarn Berry
        if: matrix.package-manager == 'yarn'
        run: |
          corepack enable
          yarn set version stable

      - name: Run unit tests
        run: node --test

      - name: Create test environment
        shell: bash
        run: |
          node src/cli.js --node=18.20.0 test-ci-env

      - name: Verify environment structure
        shell: bash
        run: |
          test -d test-ci-env/bin
          test -d test-ci-env/lib
          test -f test-ci-env/.nvenv

      - name: Verify Node.js installation
        shell: bash
        run: |
          if [ -f test-ci-env/bin/node ]; then
            ./test-ci-env/bin/node --version
          elif [ -f test-ci-env/bin/node.cmd ]; then
            test-ci-env/bin/node.cmd --version
          fi

      - name: Test package manager - npm
        if: matrix.package-manager == 'npm'
        shell: bash
        run: |
          cd test-ci-env
          if [ -f bin/npm ]; then
            ./bin/npm --version
            ./bin/npm init -y
            ./bin/npm install express
          elif [ -f bin/npm.cmd ]; then
            bin/npm.cmd --version
            bin/npm.cmd init -y
            bin/npm.cmd install express
          fi

      - name: Test package manager - pnpm
        if: matrix.package-manager == 'pnpm'
        shell: bash
        run: |
          cd test-ci-env
          if [ -f bin/node ]; then
            source bin/activate
            pnpm init
            pnpm add express
          elif [ -f bin/node.cmd ]; then
            export PATH="$(pwd)/bin:$PATH"
            pnpm init
            pnpm add express
          fi

      - name: Test package manager - yarn
        if: matrix.package-manager == 'yarn'
        shell: bash
        run: |
          cd test-ci-env
          if [ -f bin/node ]; then
            source bin/activate
            yarn init -y
            yarn add express
          fi

  test-bun:
    name: Test on Bun / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Run unit tests with Bun
        run: bun test

      - name: Create test environment with Bun
        shell: bash
        run: |
          bun src/cli.js --node=18.20.0 test-bun-env

      - name: Verify environment structure
        shell: bash
        run: |
          test -d test-bun-env/bin
          test -d test-bun-env/lib
          test -f test-bun-env/.nvenv

      - name: Verify Node.js installation
        shell: bash
        run: |
          if [ -f test-bun-env/bin/node ]; then
            ./test-bun-env/bin/node --version
          elif [ -f test-bun-env/bin/node.cmd ]; then
            test-bun-env/bin/node.cmd --version
          fi

      - name: Test Bun as package manager
        shell: bash
        run: |
          cd test-bun-env
          if [ -f bin/node ]; then
            source bin/activate
            bun init -y
            bun add express
          elif [ -f bin/node.cmd ]; then
            export PATH="$(pwd)/bin:$PATH"
            bun init -y
            bun add express
          fi
